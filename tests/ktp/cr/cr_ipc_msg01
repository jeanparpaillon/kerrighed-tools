#!/bin/bash
###############################################################################
##
## Copyright (c) Kerlabs, 2009
##
## This program is free software;  you can redistribute it and#or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
## or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program;  if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
##
###############################################################################
#
# Description:  Test program for Kerrighed checkpoint/restart of SYSV MSG Queue
#
# Author:       Matthieu FertrÃ©, matthieu.fertre@kerlabs.com
#

source `dirname $0`/lib_cr.sh
source `dirname $0`/lib_cr_ipc.sh

description="Checkpoint/Restart of SYSV IPC MSG Queue (no C/R of processus)"

cr_ipc_msg01()
{
    TCID="$FUNCNAME"               # Identifier of this testcase.
    TST_COUNT=$[$TST_COUNT+1]      # Test case number.

    local msgpath=`mktemp -d`
    local written_msg="$RANDOM"

    # create the msg and get its identifier
    create_msg $msgpath $written_msg || return $?

    wait_other_instances $FUNCNAME 'ipcs -q|grep "^0x"|wc -l' || return $?

    # dump it
    dump_msg $MSGID $msgpath $msgpath/msg_v1.bin || return $?

    # check the value is still ok
    check_msg_content $MSGID $msgpath "$written_msg" || return $?

    # update the value
    send_message $MSGID $msgpath "$RANDOM" || return $?

    # delete it
    delete_msg $MSGID $msgpath || return $?

    # restore it
    restore_msg $MSGID $msgpath $msgpath/msg_v1.bin || return $?

    check_msg_content $MSGID $msgpath "$written_msg" || return $?

    written_msg="$RANDOM"
    send_message $MSGID $msgpath "$written_msg" || return $?

    check_msg_content $MSGID $msgpath "$written_msg" || return $?

    dump_msg $MSGID $msgpath $msgpath/msg_v2.bin || return $?

    written_msg="$RANDOM"
    send_message $MSGID $msgpath "$written_msg" || return $?

    dump_msg $MSGID $msgpath $msgpath/msg_v3.bin || return $?

    delete_msg $MSGID $msgpath || return $?

    restore_msg $MSGID $msgpath $msgpath/msg_v3.bin || return $?

    check_msg_content $MSGID $msgpath "$written_msg" || return $?

    delete_msg $MSGID $msgpath || return $?

    ret=$?

    print_success $ret

    # thanks to NFS, even rm -rf may fail
    rm -rf $msgpath 2> /dev/null

    return $ret
}

CR_setup $@ || exit $?

cr_ipc_msg01 || exit $?
