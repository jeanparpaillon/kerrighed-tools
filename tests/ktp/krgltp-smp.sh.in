#!/bin/bash

# Related LTP version: 20091031

DEVICE=/dev/null
DEVICE_FS_TYPE=tmpfs

# Default values for arguments

#onetest=sendfile01
let nr_ps=16
let nr_run=1

BASETEST=@ltpbase@/testcases/bin/
PATH=${PATH}:@ltpbase@/tools:$BASETEST

###############################
# Manage restart of KTP from a chosen test
firsttest=""

###############################
############################### FUNCTIONS DEFINITION
###############################

function mustbeskipped(){
	if [ "$firsttest" = "$1" ]; then
		echo "We have reached $1, now starting"
		firsttest=""
	fi
	if [ "$firsttest" != "" ]; then
		echo "*** Skipping test $1"
		return 0
	fi

	return 1
}

# Check for possible prerequisites
function check_environment(){
	# getdtablesize01
	if [ ! -f /etc/hosts ]; then
		echo 'Unable to find the /etc/hosts file.'
		echo 'Needed for at least: getdtablesize01'
		exit 1
	fi
}

# Tell which loop of all tests is currently running
function print_progress(){
	local run_nr

	nr_arg=
	if [ -z "$onetest" ]; then
		let run_nr=nr+1
		nr_arg="run $run_nr/$nr_run "
	fi
	echo
	echo -n "$nr_arg"
}

function read_exit_status() {
	wait ${pid[$1]}
}

# Run all concurrent instances of a given test command in separate
# working directories
# The pids of the commands are stored in the pid[] array.
function run_all_instances() {
	local check_fun=$1
	local i

	shift

	# Load any background pipe in its own pgrp
	set -m
	for i in `seq 1 $nr_ps`; do
		$BASETEST/$@ &
		pid[$i]=$!
	done
	# Restore default behavior in non-interactive shell
	set +m

	for i in `seq 1 $nr_ps`; do
		$check_fun $i
	done
}

function check_runtest() {
	read_exit_status $1 || exit 0
}

# run one cmd
# runtest cmd cmdopt1 cmdopt2 ...
function runtest(){
	local i

	mustbeskipped $@ && return

	print_progress
	echo "*** $@ ***"
	run_all_instances check_runtest $@

	let nbpassed=nbpassed+1
}

#run a set of cmd (cmd01, cmd02, ...) using the same options
# runtests valmin valmax cmd cmdopt1 cmdopt2 ...
function runtests(){
	local i

	for i in `seq -f "%02g" $1 $2`; do
		runtest $3$i `echo $@ | cut -d' ' -f4-`
	done
}

function check_rwarn() {
	local res

	read_exit_status $1
	res=$?
	if [ "$res" -ne 4 ] && [ "$res" -ne 0 ]; then
		exit 0
	fi
}

# Run a test and accept a warning. This is mainly used for tests which warn
# on a .nfs### file. This comes from the behavior of NFS in the presence of
# a file removed since still being opened. Some tests do that...
function rwarn(){
	local i

	mustbeskipped $@ && return

	print_progress
	echo "*** $@ *** expecting WARN due to NFS"
	run_all_instances check_rwarn $@

	let nbpassed=nbpassed+1
}

#failing test: test known to fail
function rfail(){
	local i

	mustbeskipped $@ && return

	print_progress
	echo "*** $@ *** expecting FAIL"
	run_all_instances read_exit_status $@

	let nbfailed=nbfailed+1
}

# Test only running if launched alone.
function rsingle(){
	mustbeskipped $@ && return

	echo "*** $@ *** SINGLE run"

	# Load any background pipe in its own pgrp
	set -m
	$BASETEST/$@ || exit 0
	# Restore default behavior in non-interactive shell
	set +m
	let nbpassed=nbpassed+1
}

#crashing test: test known to crash
function rcrash(){
	mustbeskipped $@ && return

	print_progress
	echo "*** $@ *** expecting CRASH ! Test not executed"
	let nbcrash=nbcrash+1
}

#running test: test supposed to be ok
function r(){
	runtest $@
}

# Cleanup some directory not correctly removed by LTP
function cleanup_dirs () {
	for pat in dlinkattestdir drenameattestdir faccessattestdir fchmodattestdir fchownattestdir fstatattestdir futimesattestdir linkattestdir open10.testdir. openattestdir readlinkattestdir symlinkattestdir testdir. unlinkattestdir waitpid14.; do
		rm -rf $pat*
	done
}

function usage(){
	name=`basename $0`
	echo "usage: $name [-t] [-l] [-n <nr_loops>] [-p <nr_process>]]"
	echo "           Run all tests <nr_loops> times (default $nr_run), each test being run with <nr_process> concurrent instances (default $nr_ps)."
	echo
	echo "       $name [-n <nr_loops>] -s <testname>"
	echo "           Run test <testname> (<nr_loops> times, default is 1)"
	echo
	echo "       $name -b <testname>"
	echo "           Run test <testname> in an infinite loop"
	echo
	echo "       $name -l [other options]<testname>"
	echo "           Run test <testname> *WITHOUT* distant fork"
	echo
	echo "       $name -f [other options]<testname>"
	echo "           Run tests from test <testname>. Previous tests are skipped"
	echo
	echo "       $name -t"
	echo "           Run test with no distant action to mesure basic execution time"
	echo
	echo "       $name -h"
	echo "           Show this help message"

}

############################### MAIN TEST FUNCTION

# Run all the tests
# main <nr_run>
function main()
{
let nr=0
while [ "$nr" -lt "$1" ]; do

echo "KRGLTP: run #$nr" >> /tmp/krgltp-slabinfo.dat
cat /proc/slabinfo >> /tmp/krgltp-slabinfo.dat

cleanup_dirs

oldpwd=`pwd`
dir=`mktemp -d ktpXXXXX`
chmod 755 $dir
cd $dir || exit 1

let nbpassed=0
let nbfailed=0
let nbcrash=0

# flat list of test


############################ Abort

ulimit -c 1024; r abort01

############################ Accept

r accept01
rfail accept4_01       # Address already in use... Concurency issue ?

############################ Access

runtests 1 5 access

############################ Acct

runtests 1 2 acct

############################ Add_key

rfail add_key01   # Kerrighed does not support CONFIG_KEYS
rfail add_key02   # Kerrighed does not support CONFIG_KEYS

############################ Adjtimex

runtests 1 2 adjtimex

############################ Alarm

runtests 1 3 alarm
runtests 5 7 alarm

############################ Asyncio

r asyncio02

############################ Bind

runtests 1 2 bind

############################ Bdflush

rfail bdflush01    # Not supported on x86_64 arch

############################ Brk

r brk01

############################ Capget

runtests 1 2 capget

############################ Capset

runtests 1 2 capset

############################ Cacheflush

rfail cacheflush01      # Not supported on x86_64 arch

############################ Chdir

r chdir01
r symlink01 -T chdir01
runtests 2 4 chdir

############################ Chmod

runtests 1 7 chmod
r symlink01 -T chmod01

############################ Chown

runtests 1 5 chown

r chown01_16
r chown02_16
r chown03_16
r chown04_16
r chown05_16

############################ Chroot

runtests 1 4 chroot

############################ Clock_getres

r clock_getres01

############################ Clock_nanosleep

rfail clock_nanosleep01
r clock_nanosleep2_01

############################ Clone

runtests 1 7 clone

############################ Close

runtests 1 2 close
r close08

############################ Confstr

r confstr01

############################ Connect

r connect01

############################ Creat

r creat01
runtests 3 6 creat
cp -p $BASETEST/test1 $PWD; rfail creat07 -F test1 # NFS problem.
                            # Don't know remotely that a file is being executed
runtests 8 9 creat

############################ Dup

runtests 1 7 dup

############################ Dup2

runtests 1 5 dup2

############################ Dup3

r dup3_01

############################ Epoll

r epoll_create1_01

############################ Eventfd

r eventfd01

############################ Eventfd2

r eventfd2_01
r eventfd2_02
r eventfd2_03

############################ Exec

r execl01
r execle01
r execlp01
r execv01

r execve01
r execve02 -F $BASETEST/test3
r execve03
rfail execve04 -F $BASETEST/test3  # NFS problem
			# Doesn't know remotely that a file is open on write
r execve05 20 $BASETEST/execve05 $BASETEST/execve05 4

r execvp01

############################ Exit

runtests 1 2 exit

############################ Exit_group

r exit_group01

############################ Faccessat

r faccessat01

############################ Fadvise (posix)

runtests 1 4 posix_fadvise
r posix_fadvise01_64
r posix_fadvise02_64
r posix_fadvise03_64
r posix_fadvise04_64

############################ Fallocate

rfail fallocate01                # Need HAVE_SYSCALL_WRAPPERS...
rfail fallocate02                # Need HAVE_SYSCALL_WRAPPERS...
rfail fallocate03                # Need HAVE_SYSCALL_WRAPPERS...

############################ Fchdir

runtests 1 3 fchdir

############################ Fchmod

runtests 1 7 fchmod

############################ Fchmodat

r fchmodat01

############################ Fchown

runtests 1 5 fchown

r fchown01_16
r fchown02_16
r fchown03_16
r fchown04_16
r fchown05_16

############################ Fchownat

r fchownat01

############################ Fcntl

runtests 1 10 fcntl
rfail fcntl11          # NFS locking problem.
runtests 12 13 fcntl
rfail fcntl14          # NFS locking problem.

rfail fcntl16          # NFS problem
rfail fcntl17          # NFS locking problem.
r fcntl18
rfail fcntl19          # NFS locking problem.
rfail fcntl20          # NFS locking problem.
rfail fcntl21          # NFS locking problem.
rfail fcntl22          # NFS locking problem.
r fcntl23
rfail fcntl24          # NFS locking problem.
rfail fcntl25          # NFS locking problem.
rfail fcntl26          # NFS locking problem.
runtests 27 28 fcntl
r fcntl07B

r fcntl01_64
r fcntl02_64
r fcntl03_64
r fcntl04_64
r fcntl05_64
r fcntl06_64
r fcntl07_64
r fcntl07B_64
r fcntl08_64
r fcntl09_64
r fcntl10_64
rfail fcntl11_64       # NFS locking problem.
r fcntl12_64
r fcntl13_64
rfail fcntl14_64       # Test not supported on NFS.
rfail fcntl16_64       # NFS locking problem.
rfail fcntl17_64       # NFS locking problem.
r fcntl18_64
rfail fcntl19_64       # NFS locking problem.
rfail fcntl20_64       # NFS locking problem.
rfail fcntl21_64       # NFS locking problem.
rfail fcntl22_64       # NFS locking problem.
r fcntl23_64
rfail fcntl24_64       # NFS locking problem.
rfail fcntl25_64       # NFS locking problem.
rfail fcntl26_64       # NFS locking problem.
r fcntl27_64
r fcntl28_64

############################ Fdatasync

runtests 1 2 fdatasync

############################ Flock

runtests 1 2 flock
rfail flock03     # NFS locking problem.
rfail flock04     # NFS locking problem.
rfail flock05     # NFS locking problem.
r flock06

############################ Fmtmsg

r fmtmsg01

############################ Fork

runtests 1 11 fork
# BUG(Linux) r fork12

############################ Fpathconf

r fpathconf01

############################ Fstat

runtests 1 5 fstat
r fstat01_64
r fstat02_64
r fstat03_64
r fstat04_64
r fstat05_64

############################ Fstatat

r fstatat01
r fstatat01_64

############################ Fstatfs

runtests 1 2 fstatfs
r fstatfs01_64
r fstatfs02_64

############################ Fsync

runtests 1 3 fsync

############################ Ftruncate

runtests 1 3 ftruncate
rfail ftruncate04         # Cannot be run over NFS

r ftruncate01_64
r ftruncate02_64
r ftruncate03_64
rfail ftruncate04_64      # Cannot be run over NFS

############################ Futimesat

r futimesat01

############################ Getcontext

r getcontext01

############################ Getcpu

r getcpu01

############################ Getcwd

runtests 1 3 getcwd

############################ Getdents

runtests 1 4 getdents

r getdents01_64
r getdents02_64
r getdents03_64
r getdents04_64

############################ Getdomainname

r getdomainname01

############################ Getdtablesize

r getdtablesize01

############################ Getegid

runtests 1 2 getegid

r getegid01_16
r getegid02_16

############################ Geteuid

r geteuid01

r geteuid01_16

############################ Getgid

r getgid01
r getgid03

r getgid01_16
r getgid03_16

############################ Getgroups

runtests 1 4 getgroups

r getgroups01_16
r getgroups02_16
r getgroups03_16
r getgroups04_16

############################ Gethostid

rfail gethostid01        # Kerrighed issue. Host id not global.

############################ Gethostname

r gethostname01

############################ Getitimer

runtests 1 3 getitimer

############################ Getpagesize

r getpagesize01

############################ Getpeername

r getpeername01

############################ Getpgid

runtests 1 2 getpgid

############################ Getpgrp

r getpgrp01

############################ Getpid

runtests 1 2 getpid

############################ Getppid

runtests 1 2 getppid

############################ Getpriority

runtests 1 2 getpriority

############################ Getresgid

runtests 1 3 getresgid

############################ Getresuid

runtests 1 3 getresuid

############################ Getrlimit

runtests 1 2 getrlimit

############################ Get_mempolicy

r get_mempolicy01

############################ Get_robust_list

r get_robust_list01

############################ Getrusage

runtests 1 2 getrusage

############################ Ggetsid

runtests 1 2 getsid

############################ Getsockname

r getsockname01

############################ Getsockopt

r getsockopt01

############################ Gettimeofday

runtests 1 2 gettimeofday

############################ Gettid

r gettid01

############################ Getuid

runtests 1 3 getuid

r getuid01_16
r getuid02_16
r getuid03_16

############################ Ioctl

r ioctl01 -D /dev/tty0
r ioctl02 -D /dev/tty0
r ioctl03

r test_ioctl

############################ Inotify

r inotify_init1_01
r inotify_init1_02

runtests 1 2 inotify
r inotify03 inotify03 -D $DEVICE -T $DEVICE_FS_TYPE

############################ Ioperm

runtests 1 2 ioperm

############################ Iopl

runtests 1 2 iopl

############################ Io_*

r io_cancel01
r io_destroy01
r io_getevents01
r io_setup01
r io_submit01

############################ IPC

# Check sub-directories

############################ Keyctl

rfail keyctl01      # Kerrighed does not support CONFIG_KEYS

############################ Kill

runtests 1 10 kill

ulimit -c 1024; r kill11
r kill12

############################ Lchown

r lchown01
cp -p $BASETEST/create_link $PWD; rfail lchown02 # We have issues with finding
#                                 the create_link. And probaly issue with
#                                 concurrency.

r lchown01_16
cp -p $BASETEST/create_link $PWD; rfail lchown02_16 # Same issue as above.

############################ Link

r symlink01 -T link01
runtests 2 7 link

############################ Linkat

r linkat01

############################ Listen

r listen01

############################ Llseek

runtests 1 2 llseek

############################ Lseek

runtests 1 10 lseek

############################ Lstat

r symlink01 -T lstat01
runtests 1 3 lstat

r symlink01 -T lstat01_64
r lstat01_64
r lstat02_64
r lstat03_64

############################ madvise

runtests 1 3 madvise

############################ Mallopt

r mallopt01

############################ Mbind

rfail mbind01        # Does not detect NUMA support... ???

############################ Memcmp

r memcmp01

############################ Memcpy

r memcpy01

############################ Memmap

r mem03

############################ Memset

r memset01

############################ Mincore

runtests 1 2 mincore

############################ Mkdir

runtests 1 5 mkdir
r symlink01 -T mkdir05
runtests 8 9 mkdir

############################ Mkdirat

r mkdirat01

############################ Mknod

runtests 1 9 mknod

############################ Mlock

runtests 1 2 mlock

############################ Mlockall

runtests 1 3 mlockall

############################ Mmap

r mmap001 -m 1
runtests 1 9 mmap
# Have a look at mmapstress

############################ Modify_ldt

runtests 1 2 modify_ldt

############################ Mount

r mount01 -D $DEVICE -T $DEVICE_FS_TYPE
rfail mount02 -D $DEVICE -T $DEVICE_FS_TYPE  # Unknown issue
rfail mount03 -D $DEVICE -T $DEVICE_FS_TYPE  # Unknown issue
r mount04 -D $DEVICE -T $DEVICE_FS_TYPE

############################ Move_pages

rfail move_pages.sh 01          # Issue with NUMA support detection ?
rfail move_pages.sh 02          # Issue with NUMA support detection ?
rfail cd $BASETEST && chown root move_pages03 && chmod 04755 && move_pages.sh
rfail move_pages.sh 03          # Issue with NUMA support detection ?
rfail move_pages.sh 04          # Issue with NUMA support detection ?
rfail move_pages.sh 05          # Issue with NUMA support detection ?
rfail move_pages.sh 06          # Issue with NUMA support detection ?
rfail move_pages.sh 07          # Issue with NUMA support detection ?
rfail move_pages.sh 08          # Issue with NUMA support detection ?
rfail move_pages.sh 09          # Issue with NUMA support detection ?
rfail move_pages.sh 10          # Issue with NUMA support detection ?
rfail cd $BASETEST && chown root move_pages11 && chmod 04755 && move_pages.sh
rfail move_pages.sh 11          # Issue with NUMA support detection ?

############################ Mprotect

runtests 1 3 mprotect

############################ Mq_*

rfail mq_notify01               # Unknown issue
rfail mq_open01                 # Unknown issue
rfail mq_timedreceive01         # Unknown issue
rfail mq_timedsend01            # Unknown issue
rfail mq_unlink01               # Unknown issue

############################ Mremap

runtests 1 4 mremap

############################ Msgctl

runtests 1 2 msgctl
rfail msgctl03       # Minor issue. EIDRM returned instead of EINVAL.
runtests 4 7 msgctl
rsingle msgctl08     # This test is already a SMP stress test
rsingle msgctl09     # This test is already a SMP stress test
# rsingle msgctl10   # This test is already a SMP stress test RECHECK

############################ Msgget

runtests 1 2 msgget
rsingle msgget03     # LTP issue. Does not support concurency by design.
r msgget04

############################ Msgrcv

runtests 1 6 msgrcv

############################ Msgsnd

runtests 1 6 msgsnd

############################ Msync

runtests 1 5 msync

############################ Munlock

runtests 1 2 munlock

############################ Munlockall

r munlockall01
rfail munlockall02     # Unknown issue

############################ Munmap

runtests 1 3 munmap

############################ Nanosleep

r nanosleep01
rfail nanosleep02      # May fail due to weak sync with hard-coded sleep of 1s.
runtests 3 4 nanosleep

############################ Nftw

r nftw01
r nftw6401

############################ Nice

runtests 1 5 nice

############################ Open

r symlink01 -T open01
runtests 1 9 open
rfail open10           # NFS V3 problem

############################ Openat

r openat01

############################ Paging

# Check this

############################ Pathconf

r pathconf01

############################ Pause

runtests 1 3 pause    # I had casual issues with pause02 and pause03

############################ Personality

runtests 1 2 personality

############################ Pipe, etc

runtests 1 6 pipe
rfail pipe07          # Concurrency issue ?
runtests 8 11 pipe

############################ Pipe2

r pipe2_01
r pipe2_02

############################ Poll

r poll01

############################ Ppoll

rfail ppoll01       # Unknown error

############################ Prctl

runtests 1 2 prctl

############################ Pread

runtests 1 3 pread

r pread01_64
r pread02_64
r pread03_64

############################ Profil

r profil01

############################ Pselect

r pselect01
r pselect01_64

############################ Ptrace

rfail ptrace01  # Kerrighed issue. Does not support ptrace.
rfail ptrace02  # Kerrighed issue. Does not support ptrace.
rfail ptrace03  # Kerrighed issue. Does not support ptrace.
rfail ptrace04  # Not supported on x86 arch.
rfail ptrace05  # 2.6.30 regression ? Was running on 2.6.20.

############################ Pwrite

runtests 1 4 pwrite

############################ Quotaclt

rfail quotactl01     # Fails on a non Kerrighed kernel

############################ Read

runtests 1 4 read

############################ Readdir

runtests 1 2 readdir

############################ Readlink

r symlink01 -T readlink01
runtests 1 3 readlink
cp -f $BASETEST/creat_slink $PWD; r readlink04

############################ Readlinkat

r readlinkat01

############################ Readv

runtests 1 3 readv

############################ Reboot

runtests 1 2 reboot

############################ Recv

r recv01

############################ Recvfrom

r recvfrom01

############################ Recvmsg

rcrash recvmsg01       # User level deadlock

############################ Remap_file_pages

r remap_file_pages01
r remap_file_pages02

############################ Rename

r symlink01 -T rename01
runtests 1 10 rename
runtests 12 14 rename

############################ Renameat

r renameat01

############################ Rmdir

runtests 1 2 rmdir
r symlink01 -T rmdir03
runtests 3 5 rmdir

############################ Rt_sig*

rfail rt_sigaction01        # User level segfault on Kerrighed
rfail rt_sigprocmask01      # Segfault on regular kernel...
r rt_sigprocmask02
r rt_sigqueueinfo01
rfail rt_sigsuspend01       # Segfault on regular kernel...

############################ Sbrk

r sbrk01

############################ Sched_getparam

runtests 1 3 sched_getparam

############################ Sched_get_priority_max

runtests 1 2 sched_get_priority_max

############################ Sched_get_priority_min

runtests 1 2 sched_get_priority_min

############################ Sched_getscheduler

runtests 1 2 sched_getscheduler

############################ Sched_rr_get_interval

runtests 1 3 sched_rr_get_interval

############################ Sched_setparam

runtests 1 5 sched_setparam

############################ Sched_setscheduler

runtests 1 2 sched_setscheduler

############################ Sched_yield

r sched_yield01

############################ Sched_getaffinity

rfail sched_getaffinity01     # Unknown issue

############################ Select

runtests 1 3 select

############################ Semctl

runtests 1 7 semctl

############################ Semget

runtests 1 3 semget
rsingle semget05      # Does not support concurrency by design
r semget06

############################ Semop

runtests 1 5 semop

############################
# the following tests are part of LTP but not syscalls part
# the display format is not equal but it's interesting to test it too
#r sem01
#r sem02
#r semaphore_test_01
#r semaphore_test_02
#r semaphore_test_03

############################ Send

r send01

############################ Sendfile

r sendfile02
r sendfile03
r sendfile04
r sendfile05
r sendfile06
r sendfile07

r sendfile02_64
r sendfile03_64
r sendfile04_64
r sendfile05_64
r sendfile06_64
r sendfile07_64

############################ Sendmsg

rwarn sendmsg01

############################ Sendto

r sendto01

############################ Setdomainname

runtests 1 3 setdomainname

############################ Setegid

r setegid01

############################ Setfsgid

runtests 1 3 setfsgid
r setfsgid01_16
r setfsgid02_16
r setfsgid03_16

############################ Setfsuid

runtests 1 4 setfsuid
r setfsuid01_16
r setfsuid02_16
r setfsuid03_16
r setfsuid04_16

############################ Setgid

runtests 1 3 setgid
r setgid01_16
r setgid02_16
r setgid03_16

############################ Setgroups

runtests 1 4 setgroups
r setgroups01_16
r setgroups02_16
r setgroups03_16
r setgroups04_16

############################ Sethostname

runtests 1 3 sethostname

############################ Setitimer

runtests 1 3 setitimer

############################ Setpgid

runtests 1 3 setpgid

############################ Setpgrp

runtests 1 2 setpgrp

############################ Setpriority

runtests 1 5 setpriority

############################ Setregid

runtests 1 4 setregid
r setregid01_16
r setregid02_16
r setregid03_16
r setregid04_16

############################ Setresgid

runtests 1 3 setresgid
r setresgid01_16
r setresgid02_16
r setresgid03_16

############################ Setresuid

runtests 1 4 setresuid
r setresuid01_16
r setresuid02_16
r setresuid03_16
r setresuid04_16

############################ Setreuid

runtests 1 7 setreuid
r setreuid01_16
r setreuid02_16
r setreuid03_16
r setreuid04_16
r setreuid05_16
r setreuid06_16
r setreuid07_16

############################ Setrlimit

runtests 1 3 setrlimit

############################ Set_robust_list

r set_robust_list01

############################ Set_thread_area

rfail set_thread_area01     # Bad detection of ldt.h support ?
rfail set_thread_area02     # Bad detection of ldt.h support ?

############################ Set_tid_address

r set_tid_address01

############################ Setsid

rfail setsid01	  # Kerrighed issue. Limitation of global setpgid

############################ Setsockopt

r setsockopt01

############################ Settimeofday

runtests 1 2 settimeofday

############################ Setuid

runtests 1 4 setuid
r setuid01_16
r setuid02_16
r setuid03_16
r setuid04_16

############################ Shmat

runtests 1 3 shmat

############################ Shmctl

runtests 1 4 shmctl

############################ Shmdt

runtests 1 2 shmdt

############################ Shmget

runtests 1 2 shmget
rsingle shmget03   # Test does not support concurrency by design.
runtests 4 5 shmget

ipcs # Just check ipcs does not crash.

############################ Sigaction

runtests 1 2 sigaction

############################ Sigaltstack

runtests 1 2 sigaltstack

############################ Sighold

r sighold02

############################ Signal

runtests 1 5 signal

############################ Signalfd

r signalfd01

r signalfd4_01
r signalfd4_02

############################ Sigpending

r sigpending02

############################ Sigprocmask

r sigprocmask01

############################ Sigrelse

r sigrelse01

############################ Sigsuspend

r sigsuspend01

############################ Socket

runtests 1 3 socket

############################ Socketcall

runtests 1 4 socketcall

############################ Socketpair

runtests 1 2 socketpair

############################ Sockioctl

r sockioctl01

############################ Splice

rfail splice01        # Cannot be run over NFS
seq 1 10000000 | r splice02 splice02-temp    # Unknown issue + script problem
                                             # with the pipe.
rfail tee01           # Cannot be run over NFS

############################ Ssetmask

rfail ssetmask01      # Not supported on x86_64

############################ Stat

runtests 1 3 stat
r symlink01 -T stat04
runtests 5 6 stat

r stat01_64
r stat02_64
r stat03_64
r symlink01 -T stat04_64
r stat05_64
r stat06_64

############################ Statfs

runtests 1 3 statfs

############################ Statvfs

r statvfs01

############################ Stime

runtests 1 2 stime

############################ String

r string01

############################ Swapoff

# WARN runtests 1 2 swapoff

############################ Swapon

rfail swapon01	           # Cannot run on top of NFS
rfail swapon02	           # Cannot run on top of NFS
rfail swapon03             # Cannot run on top of NFS

############################ Symlink

runtests 1 5 symlink

############################ Symlinkat

r symlinkat01

############################ Sync

runtests 1 2 sync
r sync_file_range01

############################ Syscall

r syscall01

############################ Sysconf

r sysconf01

############################ Sysctl

r sysctl01
runtests 3 5 sysctl

############################ Sysinfo

runtests 1 2 sysinfo

############################ Syslog

# rfail syslog01  # Very long and possible user level dead-lock
# rfail syslog02  # Very long and possible user level dead-lock
# rfail syslog03  # Very long and possible user level dead-lock
# rfail syslog04  # Very long and possible user level dead-lock
# rfail syslog05
# rfail syslog06
# rfail syslog07
# rfail syslog08
# rfail syslog09
# rfail syslog10
runtests 11 12 syslog

############################ Time

r time01
r time02

############################ Timerfd

runtests 1 3 timerfd

r timer_getoverrun01
r timer_gettime01

############################ Times

r times01
r times03

############################ Tkill

r tkill01
r tkill02

############################ Truncate

runtests 1 4 truncate
truncate01_64
truncate02_64
truncate03_64
truncate04_64

############################ Ulimit

r ulimit01

############################ Umask

runtests 1 3 umask

############################ Uname

runtests 1 3 uname

r newuname01

############################ Unlink

r symlink01 -T unlink01
runtests 5 8 unlink

############################ Unlinkat

r unlinkat01

############################ Unshare

r unshare01
r unshare02

############################ Umount

r umount01 -D $DEVICE -T $DEVICE_FS_TYPE
r umount02 -D $DEVICE -T $DEVICE_FS_TYPE
rfail umount03 -D $DEVICE -T $DEVICE_FS_TYPE # Problem due to mount of /dev/null ?

############################ Ustat

runtests 1 2 ustat

############################ Utime

r symlink01 -T utime01
# BUG runtests 1 3 utime	NFS
runtests 4 6 utime

############################ Utimes

rwarn utimes01

############################ Vfork

runtests 1 2 vfork

############################ Vhangup

runtests 1 2 vhangup

############################ Vmsplice

rfail vmsplice01   # Cannot be run over NFS

############################ Wait

r wait02

runtests 1 2 wait4

############################ Waitpid

runtests 1 9 waitpid
r waitpid10 5
runtests 11 12 waitpid
rcrash waitpid13              # User level dead-lock

############################ Waitid

r waitid01
rfail waitid02                # Unknown issue.

############################ Write

runtests 1 5 write

############################ Writev

runtests 1 6 writev

############################
# tests created for Kerrighed
############################

############################ Checkpoint/Restart

rsingle cr-pre # fake test to prepare C/R tests
r cr01
#rsingle cr02 #NFS...
#r cr03 # scenario included in cr06
r cr04
#r cr05 # scenario included in cr10
r cr06
#r cr07 # scenario included in cr09 and cr10
runtests 8 10 cr
######## following tests are running single mode currently
#rsingle cr11 # scenario included in cr14 and cr15
#rsingle cr12 # scenario included in cr16
rsingle cr13
rsingle cr14
rsingle cr15
rsingle cr16
#rsingle cr17 # scenario included in cr23
rsingle cr18
#rsingle cr19 # scenario included in cr21
#rsingle cr20 # scenario included in cr22
rsingle cr21
rsingle cr22
rsingle cr23
rsingle cr24
r cr_abort01
r cr_abort02
r cr_tree01
rsingle cr_tree02
r cr_pipe01
r cr_pipe02
# rsingle cr_callbacks01 #still failing because of NFS
r cr_exclude_mm01
r cr_signal01
r cr_clone_files01
r cr_clone_fs01
r cr_clone_semundo01
r cr_thread01
r cr_thread_java01
r cr_ipc_msg01
r cr_ipc_sem01
r cr_ipc_sem02
r cr_ipc_shm01
r cr_ipc_shm02
########

rsingle cr-post # fake test to clean results of C/R tests


## Now, finish with the long running LTP tests.


rfail fcntl15          # NFS locking problem.
rfail fcntl15_64       # NFS locking problem.
r epoll-ltp
rcrash msgctl11	       # OOM


let nr=nr+1
done

echo "KRGLTP: run #$nr_run" >> /tmp/krgltp-slabinfo.dat
cat /proc/slabinfo >> /tmp/krgltp-slabinfo.dat

cleanup_dirs

cd $oldpwd
rm -rf $dir
}

# Run all the tests and display a report
# run_tests <nr_run>
function run_tests(){
	check_environment
	time main $1

	let total=nbpassed+nbfailed+nbcrash

	echo "*** krgcapset options: none"
	echo "*** nr loops: $nr"
	echo "*** "
	echo "*** Execution report"
	echo "***     - passed: $nbpassed"
	echo "***     - failed: $nbfailed"
	echo "***     - crash:  $nbcrash"
	echo "***     - total:  $total"
}

###############################
############################### SCRIPT CORE
###############################


# Parse args
while getopts 'b:lts:n:p:f:h' name; do
	case "$name" in
	b)	onetest="$OPTARG"
		infiniteloop="yes"
		;;
	l)
		localonly="yes"
		;;
	t)
		basictime="yes"
		;;
	s)
		onetest="$OPTARG"
		;;
	n)
		nr_run=$OPTARG
		;;
	p)
		nr_ps=$OPTARG
		;;
	f)
		firsttest=$OPTARG
		echo "KRGLTP: first test will be $firsttest"
		;;
	h)
		usage; exit 0
		;;
	*)
		usage; exit 1
		;;
	esac
done

let nr_shift=$OPTIND-1
shift $nr_shift

# Fix broken installs
chmod u+s $BASETEST/change_owner
chmod u+s $BASETEST/create_link

rm -f /tmp/krgltp-slabinfo.dat
echo "KRGLTP: nbrun=$nr_run" > /tmp/krgltp-slabinfo.dat

TIMEFORMAT=$'\n\n*** Total execution time: %lR (%R seconds)'

# Check if we want to mesure basic execution time
if [ -n "$basictime" ]; then
	run_tests 1
	exit 0
fi

slab-check

# Use the distant fork feature
if [ -z "$localonly" ]; then
	echo "* Waiting for the cluster to start"
	krgadm cluster wait_start
	krgcapset -d +DISTANT_FORK || exit 1
fi

export KTP_NR_PS=$nr_ps

# Check if we just want a single test
if [ ! -z "$onetest" ]; then
	if [ -z "$infiniteloop" ]; then
		for i in $(seq 1 $nr_run); do
			echo
			echo "[ITERATION $i/$nr_run starts...]"
			r $onetest $@
		done
		exit 0
	else
		i=0
		while /bin/true; do
			i=$((i+1))
			echo
			echo "[ITERATION $i/infinity starts...]"
			r $onetest $@
		done
	fi
else
	run_tests $nr_run
	echo "***"
	echo "*** Memory leak checking"
	slab-check
fi
